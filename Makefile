# The top level rule indicates how to link everything together into calc

bin/b-minor: obj/decl.o obj/expr.o obj/parser.o obj/scanner.o obj/stmt.o obj/type.o \
          obj/param_list.o obj/main.o obj/scope.o obj/symbol.o obj/hash_table.o \
	  obj/typecheck.o obj/x64_codegen.o
	gcc obj/decl.o obj/expr.o obj/parser.o obj/scanner.o obj/stmt.o obj/type.o \
	    obj/param_list.o obj/main.o obj/scope.o obj/symbol.o obj/hash_table.o \
	    obj/typecheck.o obj/x64_codegen.o -o bin/b-minor -lm

# This pattern indicates that any .o file depends
# upon the .c file of the same name, and all of the .h files.
# So, if a .o file is needed, it is built automatically.

obj/%.o: src/%.c src/*.h
	gcc -ggdb -Wall -Wextra -c $< -o $@

# Only the files generated by flex and bison need explicit rules.

src/scanner.c: src/scanner.flex src/parser.h
	flex -osrc/scanner.c src/scanner.flex

src/parser.c src/parser.h: src/parser.bison
	bison --defines=src/parser.h --output=src/parser.c -v src/parser.bison

# clean causes all intermediate files to be deleted.

clean:
	rm -f src/parser.c src/parser.h src/parser.output src/scanner.c obj/*.o bin/chapter6
